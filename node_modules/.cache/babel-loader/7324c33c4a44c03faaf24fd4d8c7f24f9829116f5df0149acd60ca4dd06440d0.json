{"ast":null,"code":"export function sliderValueToVideoTime(duration,sliderValue){return Math.round(duration*sliderValue/100);}export const toTimeString=function(sec){let showMilliSeconds=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;sec=parseFloat(sec);let hours=Math.floor(sec/3600);// get hours\nlet minutes=Math.floor((sec-hours*3600)/60);// get minutes\nlet seconds=sec-hours*3600-minutes*60;//  get seconds\n// add 0 if value < 10; Example: 2 => 02\nif(hours<10){hours=\"0\"+hours;}if(minutes<10){minutes=\"0\"+minutes;}if(seconds<10){seconds=\"0\"+seconds;}let maltissaRegex=/\\..*$/;// matches the decimal point and the digits after it e.g if the number is 4.567 it matches .567\nlet millisec=String(seconds).match(maltissaRegex);return hours+\":\"+minutes+\":\"+String(seconds).replace(maltissaRegex,\"\")+(showMilliSeconds?millisec?millisec[0]:\".000\":\"\");};export const readFileAsBase64=async file=>{return new Promise((resolve,reject)=>{const reader=new FileReader();reader.onload=()=>{resolve(reader.result);};reader.onerror=reject;reader.readAsDataURL(file);});};export const download=url=>{const link=document.createElement(\"a\");link.href=url;link.setAttribute(\"download\",\"\");link.click();};","map":{"version":3,"names":["sliderValueToVideoTime","duration","sliderValue","Math","round","toTimeString","sec","showMilliSeconds","arguments","length","undefined","parseFloat","hours","floor","minutes","seconds","maltissaRegex","millisec","String","match","replace","readFileAsBase64","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsDataURL","download","url","link","document","createElement","href","setAttribute","click"],"sources":["/Users/gimseongu/Desktop/dev/Project1-React.js-Bootstrap/project1-video-editor/src/utils/utils.js"],"sourcesContent":["export function sliderValueToVideoTime(duration, sliderValue) {\n  return Math.round((duration * sliderValue) / 100);\n}\n\nexport const toTimeString = (sec, showMilliSeconds = true) => {\n  sec = parseFloat(sec);\n  let hours = Math.floor(sec / 3600); // get hours\n  let minutes = Math.floor((sec - hours * 3600) / 60); // get minutes\n  let seconds = sec - hours * 3600 - minutes * 60; //  get seconds\n  // add 0 if value < 10; Example: 2 => 02\n  if (hours < 10) {\n    hours = \"0\" + hours;\n  }\n  if (minutes < 10) {\n    minutes = \"0\" + minutes;\n  }\n  if (seconds < 10) {\n    seconds = \"0\" + seconds;\n  }\n  let maltissaRegex = /\\..*$/; // matches the decimal point and the digits after it e.g if the number is 4.567 it matches .567\n\n  let millisec = String(seconds).match(maltissaRegex);\n  return (\n    hours +\n    \":\" +\n    minutes +\n    \":\" +\n    String(seconds).replace(maltissaRegex, \"\") +\n    (showMilliSeconds ? (millisec ? millisec[0] : \".000\") : \"\")\n  );\n};\n\nexport const readFileAsBase64 = async (file) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n    reader.onerror = reject;\n    reader.readAsDataURL(file);\n  });\n};\n\nexport const download = (url) => {\n  const link = document.createElement(\"a\");\n  link.href = url;\n  link.setAttribute(\"download\", \"\");\n  link.click();\n};\n"],"mappings":"AAAA,MAAO,SAAS,CAAAA,sBAAsBA,CAACC,QAAQ,CAAEC,WAAW,CAAE,CAC5D,MAAO,CAAAC,IAAI,CAACC,KAAK,CAAEH,QAAQ,CAAGC,WAAW,CAAI,GAAG,CAAC,CACnD,CAEA,MAAO,MAAM,CAAAG,YAAY,CAAG,QAAAA,CAACC,GAAG,CAA8B,IAA5B,CAAAC,gBAAgB,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CACvDF,GAAG,CAAGK,UAAU,CAACL,GAAG,CAAC,CACrB,GAAI,CAAAM,KAAK,CAAGT,IAAI,CAACU,KAAK,CAACP,GAAG,CAAG,IAAI,CAAC,CAAE;AACpC,GAAI,CAAAQ,OAAO,CAAGX,IAAI,CAACU,KAAK,CAAC,CAACP,GAAG,CAAGM,KAAK,CAAG,IAAI,EAAI,EAAE,CAAC,CAAE;AACrD,GAAI,CAAAG,OAAO,CAAGT,GAAG,CAAGM,KAAK,CAAG,IAAI,CAAGE,OAAO,CAAG,EAAE,CAAE;AACjD;AACA,GAAIF,KAAK,CAAG,EAAE,CAAE,CACdA,KAAK,CAAG,GAAG,CAAGA,KAAK,CACrB,CACA,GAAIE,OAAO,CAAG,EAAE,CAAE,CAChBA,OAAO,CAAG,GAAG,CAAGA,OAAO,CACzB,CACA,GAAIC,OAAO,CAAG,EAAE,CAAE,CAChBA,OAAO,CAAG,GAAG,CAAGA,OAAO,CACzB,CACA,GAAI,CAAAC,aAAa,CAAG,OAAO,CAAE;AAE7B,GAAI,CAAAC,QAAQ,CAAGC,MAAM,CAACH,OAAO,CAAC,CAACI,KAAK,CAACH,aAAa,CAAC,CACnD,MACE,CAAAJ,KAAK,CACL,GAAG,CACHE,OAAO,CACP,GAAG,CACHI,MAAM,CAACH,OAAO,CAAC,CAACK,OAAO,CAACJ,aAAa,CAAE,EAAE,CAAC,EACzCT,gBAAgB,CAAIU,QAAQ,CAAGA,QAAQ,CAAC,CAAC,CAAC,CAAG,MAAM,CAAI,EAAE,CAAC,CAE/D,CAAC,CAED,MAAO,MAAM,CAAAI,gBAAgB,CAAG,KAAO,CAAAC,IAAI,EAAK,CAC9C,MAAO,IAAI,CAAAC,OAAO,CAAC,CAACC,OAAO,CAAEC,MAAM,GAAK,CACtC,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAAC,UAAU,CAAC,CAAC,CAC/BD,MAAM,CAACE,MAAM,CAAG,IAAM,CACpBJ,OAAO,CAACE,MAAM,CAACG,MAAM,CAAC,CACxB,CAAC,CACDH,MAAM,CAACI,OAAO,CAAGL,MAAM,CACvBC,MAAM,CAACK,aAAa,CAACT,IAAI,CAAC,CAC5B,CAAC,CAAC,CACJ,CAAC,CAED,MAAO,MAAM,CAAAU,QAAQ,CAAIC,GAAG,EAAK,CAC/B,KAAM,CAAAC,IAAI,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACxCF,IAAI,CAACG,IAAI,CAAGJ,GAAG,CACfC,IAAI,CAACI,YAAY,CAAC,UAAU,CAAE,EAAE,CAAC,CACjCJ,IAAI,CAACK,KAAK,CAAC,CAAC,CACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}