{"ast":null,"code":"var _jsxFileName = \"/Users/gimseongu/Desktop/dev/Project1-React.js-Bootstrap/src/pages/VideoEditor/VideoPlayer.jsx\",\n  _s = $RefreshSig$();\nimport { BigPlayButton, ControlBar, LoadingSpinner, Player, PlayToggle } from \"video-react\";\nimport \"video-react/dist/video-react.css\";\nimport { useEffect, useRef, useState } from \"react\";\nimport video_play from \"../../assets/icons/video_play.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function VideoPlayer({\n  src,\n  onPlayerChange = () => {},\n  onChange = () => {},\n  startTime = undefined\n}) {\n  _s();\n  const [player, setPlayer] = useState(undefined);\n  const [playerState, setPlayerState] = useState(undefined);\n  const [source, setSource] = useState();\n  useEffect(() => {\n    setSource(URL.createObjectURL(src));\n  }, [src]);\n  useEffect(() => {\n    if (playerState) {\n      onChange(playerState);\n    }\n  }, [playerState]);\n  useEffect(() => {\n    onPlayerChange(player);\n    if (player) {\n      player.subscribeToStateChange(setPlayerState);\n    }\n  }, [player]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-player\",\n    children: /*#__PURE__*/_jsxDEV(Player, {\n      ref: player => {\n        setPlayer(player);\n      },\n      startTime: startTime,\n      src: source,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: source\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BigPlayButton, {\n        position: \"center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlBar, {\n        disableCompletely: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoPlayer, \"IYwlTQyOo9yInLKbpN8rqSCE9TQ=\");\n_c = VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["BigPlayButton","ControlBar","LoadingSpinner","Player","PlayToggle","useEffect","useRef","useState","video_play","jsxDEV","_jsxDEV","VideoPlayer","src","onPlayerChange","onChange","startTime","undefined","_s","player","setPlayer","playerState","setPlayerState","source","setSource","URL","createObjectURL","subscribeToStateChange","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","position","disableCompletely","_c","$RefreshReg$"],"sources":["/Users/gimseongu/Desktop/dev/Project1-React.js-Bootstrap/src/pages/VideoEditor/VideoPlayer.jsx"],"sourcesContent":["import {\n  BigPlayButton,\n  ControlBar,\n  LoadingSpinner,\n  Player,\n  PlayToggle,\n} from \"video-react\";\nimport \"video-react/dist/video-react.css\";\nimport { useEffect, useRef, useState } from \"react\";\nimport video_play from \"../../assets/icons/video_play.svg\";\n\nexport function VideoPlayer({\n  src,\n  onPlayerChange = () => {},\n  onChange = () => {},\n  startTime = undefined,\n}) {\n  const [player, setPlayer] = useState(undefined);\n  const [playerState, setPlayerState] = useState(undefined);\n  const [source, setSource] = useState();\n\n  useEffect(() => {\n    setSource(URL.createObjectURL(src));\n  }, [src]);\n\n  useEffect(() => {\n    if (playerState) {\n      onChange(playerState);\n    }\n  }, [playerState]);\n\n  useEffect(() => {\n    onPlayerChange(player);\n\n    if (player) {\n      player.subscribeToStateChange(setPlayerState);\n    }\n  }, [player]);\n\n  return (\n    <div className={\"video-player\"}>\n      <Player\n        ref={(player) => {\n          setPlayer(player);\n        }}\n        startTime={startTime}\n        src={source}\n      >\n        <source src={source} />\n        <BigPlayButton position=\"center\" />\n\n        <LoadingSpinner />\n        <ControlBar disableCompletely></ControlBar>\n      </Player>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SACEA,aAAa,EACbC,UAAU,EACVC,cAAc,EACdC,MAAM,EACNC,UAAU,QACL,aAAa;AACpB,OAAO,kCAAkC;AACzC,SAASC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,UAAU,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,OAAO,SAASC,WAAWA,CAAC;EAC1BC,GAAG;EACHC,cAAc,GAAGA,CAAA,KAAM,CAAC,CAAC;EACzBC,QAAQ,GAAGA,CAAA,KAAM,CAAC,CAAC;EACnBC,SAAS,GAAGC;AACd,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAACS,SAAS,CAAC;EAC/C,MAAM,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAACS,SAAS,CAAC;EACzD,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,CAAC;EAEtCF,SAAS,CAAC,MAAM;IACdkB,SAAS,CAACC,GAAG,CAACC,eAAe,CAACb,GAAG,CAAC,CAAC;EACrC,CAAC,EAAE,CAACA,GAAG,CAAC,CAAC;EAETP,SAAS,CAAC,MAAM;IACd,IAAIe,WAAW,EAAE;MACfN,QAAQ,CAACM,WAAW,CAAC;IACvB;EACF,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjBf,SAAS,CAAC,MAAM;IACdQ,cAAc,CAACK,MAAM,CAAC;IAEtB,IAAIA,MAAM,EAAE;MACVA,MAAM,CAACQ,sBAAsB,CAACL,cAAc,CAAC;IAC/C;EACF,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;EAEZ,oBACER,OAAA;IAAKiB,SAAS,EAAE,cAAe;IAAAC,QAAA,eAC7BlB,OAAA,CAACP,MAAM;MACL0B,GAAG,EAAGX,MAAM,IAAK;QACfC,SAAS,CAACD,MAAM,CAAC;MACnB,CAAE;MACFH,SAAS,EAAEA,SAAU;MACrBH,GAAG,EAAEU,MAAO;MAAAM,QAAA,gBAEZlB,OAAA;QAAQE,GAAG,EAAEU;MAAO;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvBvB,OAAA,CAACV,aAAa;QAACkC,QAAQ,EAAC;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEnCvB,OAAA,CAACR,cAAc;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClBvB,OAAA,CAACT,UAAU;QAACkC,iBAAiB;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAChB,EAAA,CA7CeN,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}