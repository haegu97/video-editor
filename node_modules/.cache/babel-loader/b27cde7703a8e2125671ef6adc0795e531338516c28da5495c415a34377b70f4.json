{"ast":null,"code":"import{Button}from\"antd\";import{fetchFile}from\"@ffmpeg/ffmpeg\";import{readFileAsBase64,sliderValueToVideoTime}from\"../../utils/utils\";import out from\"../../assets/icons/out.svg\";import dark_download from\"../../assets/icons/dark_download.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function VideoConversionButton(_ref){let{videoPlayerState,sliderValues,videoFile,ffmpeg,onConversionStart=()=>{},onConversionEnd=()=>{},onGifCreated=()=>{}}=_ref;const convertToGif=async()=>{// starting the conversion process\nonConversionStart(true);const inputFileName=\"input.mp4\";const outputFileName=\"output.gif\";// writing the video file to memory\nffmpeg.FS(\"writeFile\",inputFileName,await fetchFile(videoFile));const[min,max]=sliderValues;const minTime=sliderValueToVideoTime(videoPlayerState.duration,min);const maxTime=sliderValueToVideoTime(videoPlayerState.duration,max);// cutting the video and converting it to GIF with a FFMpeg command\nawait ffmpeg.run(\"-i\",inputFileName,\"-ss\",\"\".concat(minTime),\"-to\",\"\".concat(maxTime),\"-f\",\"gif\",outputFileName);// reading the resulting file\nconst data=ffmpeg.FS(\"readFile\",outputFileName);// converting the GIF file created by FFmpeg to a valid image URL\nconst gifUrl=URL.createObjectURL(new Blob([data.buffer],{type:\"image/gif\"}));const link=document.createElement(\"a\");link.href=gifUrl;link.setAttribute(\"download\",\"\");link.click();// ending the conversion process\nonConversionEnd(false);};const onCutTheVideo=async()=>{onConversionStart(true);const[min,max]=sliderValues;const minTime=sliderValueToVideoTime(videoPlayerState.duration,min);const maxTime=sliderValueToVideoTime(videoPlayerState.duration,max);ffmpeg.FS(\"writeFile\",\"input.mp4\",await fetchFile(videoFile));await ffmpeg.run(\"-ss\",\"\".concat(minTime),\"-i\",\"input.mp4\",\"-t\",\"\".concat(maxTime),\"-c\",\"copy\",\"output.mp4\");const data=ffmpeg.FS(\"readFile\",\"output.mp4\");const dataURL=await readFileAsBase64(new Blob([data.buffer],{type:\"video/mp4\"}));const link=document.createElement(\"a\");link.href=dataURL;link.setAttribute(\"download\",\"\");link.click();onConversionEnd(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Button,{onClick:()=>convertToGif(),className:\"gif__out__btn\",style:{marginBottom:16},children:[/*#__PURE__*/_jsx(\"img\",{src:out,alt:\"GIF \\uB0B4\\uBCF4\\uB0B4\\uAE30\"}),/*#__PURE__*/_jsx(\"p\",{style:{color:\"#383838\",fontSize:16,fontWeight:700},children:\"GIF \\uB0B4\\uBCF4\\uB0B4\\uAE30\"})]}),/*#__PURE__*/_jsxs(Button,{onClick:()=>onCutTheVideo(),className:\"gif__out__btn\",children:[/*#__PURE__*/_jsx(\"img\",{src:dark_download,alt:\"\\uBE44\\uB514\\uC624 \\uC800\\uC7A5\\uD558\\uAE30\"}),/*#__PURE__*/_jsx(\"p\",{style:{color:\"#383838\",fontSize:16,fontWeight:700},children:\"\\uBE44\\uB514\\uC624 \\uC800\\uC7A5\\uD558\\uAE30\"})]})]});}export default VideoConversionButton;","map":{"version":3,"names":["Button","fetchFile","readFileAsBase64","sliderValueToVideoTime","out","dark_download","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","VideoConversionButton","_ref","videoPlayerState","sliderValues","videoFile","ffmpeg","onConversionStart","onConversionEnd","onGifCreated","convertToGif","inputFileName","outputFileName","FS","min","max","minTime","duration","maxTime","run","concat","data","gifUrl","URL","createObjectURL","Blob","buffer","type","link","document","createElement","href","setAttribute","click","onCutTheVideo","dataURL","children","onClick","className","style","marginBottom","src","alt","color","fontSize","fontWeight"],"sources":["/Users/gimseongu/Desktop/dev/Project1-React.js-Bootstrap/project1-video-editor/src/pages/VideoEditor/VideoConversionButton.jsx"],"sourcesContent":["import { Button } from \"antd\";\n\nimport { fetchFile } from \"@ffmpeg/ffmpeg\";\nimport { readFileAsBase64, sliderValueToVideoTime } from \"../../utils/utils\";\nimport out from \"../../assets/icons/out.svg\";\nimport dark_download from \"../../assets/icons/dark_download.svg\";\n\nfunction VideoConversionButton({\n  videoPlayerState,\n  sliderValues,\n  videoFile,\n  ffmpeg,\n  onConversionStart = () => {},\n  onConversionEnd = () => {},\n  onGifCreated = () => {},\n}) {\n  const convertToGif = async () => {\n    // starting the conversion process\n    onConversionStart(true);\n\n    const inputFileName = \"input.mp4\";\n    const outputFileName = \"output.gif\";\n\n    // writing the video file to memory\n    ffmpeg.FS(\"writeFile\", inputFileName, await fetchFile(videoFile));\n\n    const [min, max] = sliderValues;\n    const minTime = sliderValueToVideoTime(videoPlayerState.duration, min);\n    const maxTime = sliderValueToVideoTime(videoPlayerState.duration, max);\n\n    // cutting the video and converting it to GIF with a FFMpeg command\n    await ffmpeg.run(\n      \"-i\",\n      inputFileName,\n      \"-ss\",\n      `${minTime}`,\n      \"-to\",\n      `${maxTime}`,\n      \"-f\",\n      \"gif\",\n      outputFileName\n    );\n\n    // reading the resulting file\n    const data = ffmpeg.FS(\"readFile\", outputFileName);\n\n    // converting the GIF file created by FFmpeg to a valid image URL\n    const gifUrl = URL.createObjectURL(\n      new Blob([data.buffer], { type: \"image/gif\" })\n    );\n\n    const link = document.createElement(\"a\");\n    link.href = gifUrl;\n    link.setAttribute(\"download\", \"\");\n    link.click();\n\n    // ending the conversion process\n\n    onConversionEnd(false);\n  };\n\n  const onCutTheVideo = async () => {\n    onConversionStart(true);\n\n    const [min, max] = sliderValues;\n    const minTime = sliderValueToVideoTime(videoPlayerState.duration, min);\n    const maxTime = sliderValueToVideoTime(videoPlayerState.duration, max);\n\n    ffmpeg.FS(\"writeFile\", \"input.mp4\", await fetchFile(videoFile));\n    await ffmpeg.run(\n      \"-ss\",\n      `${minTime}`,\n      \"-i\",\n      \"input.mp4\",\n      \"-t\",\n      `${maxTime}`,\n      \"-c\",\n      \"copy\",\n      \"output.mp4\"\n    );\n\n    const data = ffmpeg.FS(\"readFile\", \"output.mp4\");\n    const dataURL = await readFileAsBase64(\n      new Blob([data.buffer], { type: \"video/mp4\" })\n    );\n\n    const link = document.createElement(\"a\");\n    link.href = dataURL;\n    link.setAttribute(\"download\", \"\");\n    link.click();\n\n    onConversionEnd(false);\n  };\n\n  return (\n    <>\n      <Button\n        onClick={() => convertToGif()}\n        className=\"gif__out__btn\"\n        style={{ marginBottom: 16 }}\n      >\n        <img src={out} alt=\"GIF 내보내기\" />\n        <p style={{ color: \"#383838\", fontSize: 16, fontWeight: 700 }}>\n          GIF 내보내기\n        </p>\n      </Button>\n\n      <Button onClick={() => onCutTheVideo()} className=\"gif__out__btn\">\n        <img src={dark_download} alt=\"비디오 저장하기\" />\n        <p style={{ color: \"#383838\", fontSize: 16, fontWeight: 700 }}>\n          비디오 저장하기\n        </p>\n      </Button>\n    </>\n  );\n}\n\nexport default VideoConversionButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}