{"ast":null,"code":"var _jsxFileName = \"/Users/gimseongu/Desktop/dev/Project1-React.js-Bootstrap/src/components/MultiRangeSlider.jsx\",\n  _s = $RefreshSig$();\nimport { ChangeEvent, FC, useCallback, useEffect, useState, useRef } from \"react\";\nimport classnames from \"classnames\";\nimport \"./multiRangeSlider.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MultiRangeSlider({\n  min,\n  max,\n  onChange,\n  disabled\n}) {\n  _s();\n  const [minVal, setMinVal] = useState(min);\n  const [maxVal, setMaxVal] = useState(max);\n  const minValRef = useRef(null);\n  const maxValRef = useRef(null);\n  const range = useRef(null);\n  const getPercent = useCallback(value => Math.round((value - min) / (max - min) * 100), [min, max]);\n  useEffect(() => {\n    if (maxValRef.current) {\n      const minPercent = getPercent(minVal);\n      const maxPercent = getPercent(+maxValRef.current.value);\n      if (range.current) {\n        range.current.style.left = `${minPercent}%`;\n        range.current.style.width = `${maxPercent - minPercent}%`;\n      }\n    }\n  }, [minVal, getPercent]);\n  useEffect(() => {\n    if (minValRef.current) {\n      const minPercent = getPercent(+minValRef.current.value);\n      const maxPercent = getPercent(maxVal);\n      if (range.current) {\n        range.current.style.width = `${maxPercent - minPercent}%`;\n      }\n    }\n  }, [maxVal, getPercent]);\n  useEffect(() => {\n    onChange({\n      min: minVal,\n      max: maxVal\n    });\n  }, [minVal, maxVal]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: min,\n      max: max,\n      value: minVal,\n      ref: minValRef,\n      onChange: event => {\n        const value = Math.min(+event.target.value, maxVal - 1);\n        setMinVal(value);\n        event.target.value = value.toString();\n      },\n      className: classnames(\"thumb thumb--zindex-3\", {\n        \"thumb--zindex-5\": minVal > max - 100\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: min,\n      max: max,\n      value: maxVal,\n      ref: maxValRef,\n      onChange: event => {\n        const value = Math.max(+event.target.value, minVal + 1);\n        setMaxVal(value);\n        event.target.value = value.toString();\n      },\n      className: \"thumb thumb--zindex-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider__track\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: range,\n        className: \"slider__range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(MultiRangeSlider, \"joEa1v1zaOhKGQUDNY+uJuhJ5cU=\");\n_c = MultiRangeSlider;\nvar _c;\n$RefreshReg$(_c, \"MultiRangeSlider\");","map":{"version":3,"names":["ChangeEvent","FC","useCallback","useEffect","useState","useRef","classnames","jsxDEV","_jsxDEV","MultiRangeSlider","min","max","onChange","disabled","_s","minVal","setMinVal","maxVal","setMaxVal","minValRef","maxValRef","range","getPercent","value","Math","round","current","minPercent","maxPercent","style","left","width","children","type","ref","event","target","toString","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gimseongu/Desktop/dev/Project1-React.js-Bootstrap/src/components/MultiRangeSlider.jsx"],"sourcesContent":["import {\n  ChangeEvent,\n  FC,\n  useCallback,\n  useEffect,\n  useState,\n  useRef,\n} from \"react\";\nimport classnames from \"classnames\";\nimport \"./multiRangeSlider.css\";\n\nexport default function MultiRangeSlider({ min, max, onChange, disabled }) {\n  const [minVal, setMinVal] = useState(min);\n  const [maxVal, setMaxVal] = useState(max);\n  const minValRef = useRef(null);\n  const maxValRef = useRef(null);\n  const range = useRef(null);\n\n  const getPercent = useCallback(\n    (value) => Math.round(((value - min) / (max - min)) * 100),\n    [min, max]\n  );\n\n  useEffect(() => {\n    if (maxValRef.current) {\n      const minPercent = getPercent(minVal);\n      const maxPercent = getPercent(+maxValRef.current.value);\n\n      if (range.current) {\n        range.current.style.left = `${minPercent}%`;\n        range.current.style.width = `${maxPercent - minPercent}%`;\n      }\n    }\n  }, [minVal, getPercent]);\n\n  useEffect(() => {\n    if (minValRef.current) {\n      const minPercent = getPercent(+minValRef.current.value);\n      const maxPercent = getPercent(maxVal);\n\n      if (range.current) {\n        range.current.style.width = `${maxPercent - minPercent}%`;\n      }\n    }\n  }, [maxVal, getPercent]);\n\n  useEffect(() => {\n    onChange({ min: minVal, max: maxVal });\n  }, [minVal, maxVal]);\n\n  return (\n    <div>\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        value={minVal}\n        ref={minValRef}\n        onChange={(event) => {\n          const value = Math.min(+event.target.value, maxVal - 1);\n          setMinVal(value);\n          event.target.value = value.toString();\n        }}\n        className={classnames(\"thumb thumb--zindex-3\", {\n          \"thumb--zindex-5\": minVal > max - 100,\n        })}\n      />\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        value={maxVal}\n        ref={maxValRef}\n        onChange={(event) => {\n          const value = Math.max(+event.target.value, minVal + 1);\n          setMaxVal(value);\n          event.target.value = value.toString();\n        }}\n        className=\"thumb thumb--zindex-4\"\n      />\n\n      <div className=\"slider\">\n        <div className=\"slider__track\"></div>\n        <div ref={range} className=\"slider__range\"></div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SACEA,WAAW,EACXC,EAAE,EACFC,WAAW,EACXC,SAAS,EACTC,QAAQ,EACRC,MAAM,QACD,OAAO;AACd,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,gBAAgBA,CAAC;EAAEC,GAAG;EAAEC,GAAG;EAAEC,QAAQ;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAACM,GAAG,CAAC;EACzC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAACO,GAAG,CAAC;EACzC,MAAMQ,SAAS,GAAGd,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMe,SAAS,GAAGf,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMgB,KAAK,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAE1B,MAAMiB,UAAU,GAAGpB,WAAW,CAC3BqB,KAAK,IAAKC,IAAI,CAACC,KAAK,CAAE,CAACF,KAAK,GAAGb,GAAG,KAAKC,GAAG,GAAGD,GAAG,CAAC,GAAI,GAAG,CAAC,EAC1D,CAACA,GAAG,EAAEC,GAAG,CACX,CAAC;EAEDR,SAAS,CAAC,MAAM;IACd,IAAIiB,SAAS,CAACM,OAAO,EAAE;MACrB,MAAMC,UAAU,GAAGL,UAAU,CAACP,MAAM,CAAC;MACrC,MAAMa,UAAU,GAAGN,UAAU,CAAC,CAACF,SAAS,CAACM,OAAO,CAACH,KAAK,CAAC;MAEvD,IAAIF,KAAK,CAACK,OAAO,EAAE;QACjBL,KAAK,CAACK,OAAO,CAACG,KAAK,CAACC,IAAI,GAAI,GAAEH,UAAW,GAAE;QAC3CN,KAAK,CAACK,OAAO,CAACG,KAAK,CAACE,KAAK,GAAI,GAAEH,UAAU,GAAGD,UAAW,GAAE;MAC3D;IACF;EACF,CAAC,EAAE,CAACZ,MAAM,EAAEO,UAAU,CAAC,CAAC;EAExBnB,SAAS,CAAC,MAAM;IACd,IAAIgB,SAAS,CAACO,OAAO,EAAE;MACrB,MAAMC,UAAU,GAAGL,UAAU,CAAC,CAACH,SAAS,CAACO,OAAO,CAACH,KAAK,CAAC;MACvD,MAAMK,UAAU,GAAGN,UAAU,CAACL,MAAM,CAAC;MAErC,IAAII,KAAK,CAACK,OAAO,EAAE;QACjBL,KAAK,CAACK,OAAO,CAACG,KAAK,CAACE,KAAK,GAAI,GAAEH,UAAU,GAAGD,UAAW,GAAE;MAC3D;IACF;EACF,CAAC,EAAE,CAACV,MAAM,EAAEK,UAAU,CAAC,CAAC;EAExBnB,SAAS,CAAC,MAAM;IACdS,QAAQ,CAAC;MAAEF,GAAG,EAAEK,MAAM;MAAEJ,GAAG,EAAEM;IAAO,CAAC,CAAC;EACxC,CAAC,EAAE,CAACF,MAAM,EAAEE,MAAM,CAAC,CAAC;EAEpB,oBACET,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MACEyB,IAAI,EAAC,OAAO;MACZvB,GAAG,EAAEA,GAAI;MACTC,GAAG,EAAEA,GAAI;MACTY,KAAK,EAAER,MAAO;MACdmB,GAAG,EAAEf,SAAU;MACfP,QAAQ,EAAGuB,KAAK,IAAK;QACnB,MAAMZ,KAAK,GAAGC,IAAI,CAACd,GAAG,CAAC,CAACyB,KAAK,CAACC,MAAM,CAACb,KAAK,EAAEN,MAAM,GAAG,CAAC,CAAC;QACvDD,SAAS,CAACO,KAAK,CAAC;QAChBY,KAAK,CAACC,MAAM,CAACb,KAAK,GAAGA,KAAK,CAACc,QAAQ,CAAC,CAAC;MACvC,CAAE;MACFC,SAAS,EAAEhC,UAAU,CAAC,uBAAuB,EAAE;QAC7C,iBAAiB,EAAES,MAAM,GAAGJ,GAAG,GAAG;MACpC,CAAC;IAAE;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACFlC,OAAA;MACEyB,IAAI,EAAC,OAAO;MACZvB,GAAG,EAAEA,GAAI;MACTC,GAAG,EAAEA,GAAI;MACTY,KAAK,EAAEN,MAAO;MACdiB,GAAG,EAAEd,SAAU;MACfR,QAAQ,EAAGuB,KAAK,IAAK;QACnB,MAAMZ,KAAK,GAAGC,IAAI,CAACb,GAAG,CAAC,CAACwB,KAAK,CAACC,MAAM,CAACb,KAAK,EAAER,MAAM,GAAG,CAAC,CAAC;QACvDG,SAAS,CAACK,KAAK,CAAC;QAChBY,KAAK,CAACC,MAAM,CAACb,KAAK,GAAGA,KAAK,CAACc,QAAQ,CAAC,CAAC;MACvC,CAAE;MACFC,SAAS,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eAEFlC,OAAA;MAAK8B,SAAS,EAAC,QAAQ;MAAAN,QAAA,gBACrBxB,OAAA;QAAK8B,SAAS,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACrClC,OAAA;QAAK0B,GAAG,EAAEb,KAAM;QAACiB,SAAS,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC5B,EAAA,CA5EuBL,gBAAgB;AAAAkC,EAAA,GAAhBlC,gBAAgB;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}